// SPDX-License-Identifier: MIT
pragma solidity >=0.4.22 <0.8.20;

import "@openzeppelin/contracts/token/ERC20/ERC20.sol";
import "@openzeppelin/contracts/access/Ownable.sol";

contract GroupcoinToken is ERC20, Ownable {
    // Constructor initializing the ERC20 token with a name and symbol
    constructor() ERC20("Groupcoin", "GC") {}

    // Function to mint new tokens; only the owner can call this function
    function mint(address to, uint256 amount) external onlyOwner {
        require(to != address(0), "Cannot mint to the zero address");
        _mint(to, amount);
    }

    // Function to burn tokens from a specific address; only the owner can call this function
    function burn(address from, uint256 amount) external onlyOwner {
        require(from != address(0), "Cannot burn from the zero address");
        require(balanceOf(from) >= amount, "Burn amount exceeds balance");
        _burn(from, amount);
    }
}
